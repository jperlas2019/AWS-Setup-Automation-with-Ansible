---
- name: Create the AWS VPC
  amazon.aws.ec2_vpc_net:
    name: "{{ AWS_PREFIX + '_SOMETHING' }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ region }}"
  register: aws_vpc_info

- name: Make sure a subnet exists
  amazon.aws.ec2_vpc_subnet:
    cidr: "{{ subnet_cidr }}"
    region: "{{ region }}"
    az: us-west-2a
    vpc_id: "{{ aws_vpc_info.vpc.id }}"
    tags:
      Name: "{{ AWS_PREFIX + '_SUBNET' }}"
  register: aws_subnet_info

- name: Week8 create subnet in another AZ
  amazon.aws.ec2_vpc_subnet:
    cidr: "{{ subnet_cidr_wk8 }}"
    region: "{{ region }}"
    az: us-west-2b
    vpc_id: "{{ aws_vpc_info.vpc.id }}"
    tags:
      Name: "{{ AWS_PREFIX + '_SUBNET2' }}"
  register: aws_subnet_info2

- name: DB subnet group
  community.aws.rds_subnet_group:
    state: present
    name: acit4640-db-subnet
    description: DB subnet group
    subnets:
      - "{{ aws_subnet_info.subnet.id }}"
      - "{{ aws_subnet_info2.subnet.id }}"

- name: Internet Gateway
  ec2_vpc_igw:
    vpc_id: "{{ aws_vpc_info.vpc.id }}"
    tags:
      Name: "{{ AWS_PREFIX + '_IGW' }}"
  register: aws_igw_info

- name: Route table
  amazon.aws.ec2_vpc_route_table:
    subnets:
      -  "{{ aws_subnet_info.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ aws_igw_info.gateway_id }}"
    vpc_id: "{{ aws_vpc_info.vpc.id }}"
    tags:
      Name: "{{ AWS_PREFIX + '_RTBL' }}"

- name: Security group
  amazon.aws.ec2_group:
    name: "{{ AWS_PREFIX + '_SECGRP' }}"
    description: Security group for Week4 - SSH and HTTP wide open
    vpc_id: "{{ aws_vpc_info.vpc.id }}"
    rules:
      - proto: tcp
        ports:
          - 22
          - 80
        cidr_ip: 0.0.0.0/0

- name: Security group for DB
  amazon.aws.ec2_group:
    name: "{{ AWS_PREFIX + '_SECGRP_DB' }}"
    description: Security group for DB - SSH and HTTP wide open
    vpc_id: "{{ aws_vpc_info.vpc.id }}"
    rules:
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        ports:
          - 3306
        cidr_ip: "{{ subnet_cidr }}"
  register: aws_groups_db
